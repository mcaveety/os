package:
  name: golem
  version: "1.2.5"
  epoch: 0
  description: "Golem is an open source durable computing platform that makes it easy to build and deploy highly reliable distributed systems."
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - gcc
      - openssl-dev
      - pkgconf
      - protobuf-dev
      - protoc
      - rust
      - rustup
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/golemcloud/golem
      tag: v${{package.version}}
      expected-commit: 5e66ffec498dc4dc58855ae35c0ccfd067221b77

  - name: Configure and build
    runs: |
      export PATH=$PATH:$HOME/.cargo/bin

      cargo install --force cargo-make

      cargo make --profile ci build-release

      mkdir -p ${{targets.contextdir}}/usr/bin/

      mv ./target/release/golem-component-service ${{targets.contextdir}}/usr/bin/golem-component-service

  - uses: strip

subpackages:
  - name: ${{package.name}}-component-service
    dependencies:
      runtime:
        # https://github.com/golemcloud/golem/blob/3649cae14476dd534b6d51d12e686b1f020aa27b/golem-component-service/docker/Dockerfile#L20
        - ca-certificates-bundle
        - openssl
        - libssl3
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/
          mkdir -p ${{targets.contextdir}}/config
          mkdir -p ${{targets.contextdir}}/db
          ln -sf /usr/bin/golem-component-service ${{targets.contextdir}}/golem-component-service

          install -Dm755 ./golem-component-service/config/component-service.toml ${{targets.contextdir}}/config/component-service.toml
          cp -R ./golem-component-service/db/* ${{targets.contextdir}}/db/
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: test/tw/ldd-check
        - name: Test symlinks
          runs: |
            set -e
            test "$(readlink /golem-component-service)" = "/usr/bin/golem-component-service"

  - name: ${{package.name}}-component-compilation-service
    dependencies:
      runtime:
        # https://github.com/golemcloud/golem/blob/main/golem-component-compilation-service/docker/Dockerfile#L19
        - ca-certificates-bundle
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/
          mkdir -p ${{targets.contextdir}}/config
          mkdir -p ${{targets.contextdir}}/db
          ln -sf /usr/bin/golem-component-compilation-service ${{targets.contextdir}}/golem-component-compilation-service
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: test/tw/ldd-check
        - name: Test symlinks
          runs: |
            set -e
            test "$(readlink /golem-component-compilation-service)" = "/usr/bin/golem-component-compilation-service"

  - name: ${{package.name}}-shard-manager
    dependencies:
      runtime:
        # https://github.com/golemcloud/golem/blob/main/golem-shard-manager/docker/Dockerfile#L19
        - ca-certificates-bundle
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/
          mkdir -p ${{targets.contextdir}}/config
          mkdir -p ${{targets.contextdir}}/db
          ln -sf /usr/bin/golem-shard-manager ${{targets.contextdir}}/golem-shard-manager
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: test/tw/ldd-check
        - name: Test symlinks
          runs: |
            set -e
            test "$(readlink /golem-shard-manager)" = "/usr/bin/golem-shard-manager"

  - name: ${{package.name}}-worker-executor
    dependencies:
      runtime:
        # https://github.com/golemcloud/golem/blob/main/golem-worker-executor/docker/Dockerfile#L19
        - ca-certificates-bundle
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/
          mkdir -p ${{targets.contextdir}}/config
          mkdir -p ${{targets.contextdir}}/db
          ln -sf /usr/bin/golem-worker-executor ${{targets.contextdir}}/golem-worker-executor
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: test/tw/ldd-check
        - name: Test symlinks
          runs: |
            set -e
            test "$(readlink /golem-worker-executor)" = "/usr/bin/golem-worker-executor"

  - name: ${{package.name}}-worker-service
    dependencies:
      runtime:
        # https://github.com/golemcloud/golem/blob/main/golem-worker-service/docker/Dockerfile#L20
        - ca-certificates-bundle
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/
          mkdir -p ${{targets.contextdir}}/config
          mkdir -p ${{targets.contextdir}}/db
          ln -sf /usr/bin/golem-worker-service ${{targets.contextdir}}/golem-worker-service
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: test/tw/ldd-check
        - name: Test symlinks
          runs: |
            set -e
            test "$(readlink /golem-worker-service)" = "/usr/bin/golem-worker-service"

update:
  enabled: true
  ignore-regex-patterns:
    - "-dev.*"
  github:
    identifier: golemcloud/golem
    strip-prefix: v

test:
  pipeline:
    # AUTOGENERATED
    - name: Test binary inclusions
      runs: |
        stat /usr/bin/golem-component-service
        stat /usr/bin/golem-component-compilation-service
        stat /usr/bin/golem-shard-manager
        stat /usr/bin/golem-worker-executor
        stat /usr/bin/golem-worker-service
